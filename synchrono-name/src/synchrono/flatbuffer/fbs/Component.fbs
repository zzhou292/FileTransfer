include "Utils.fbs";

// Types of "pixels" for a camera sensor
namespace SynFlatBuffers.Component.Sensor.Camera;

table RGBA {
  R:byte;
  G:byte;
  B:byte;
  A:byte;
}

// Types of "pixels" for a camera sensor
namespace SynFlatBuffers.Component.Sensor.Lidar;

table XYZI {
  x:float;
  y:float;
  z:float;
  intensity:float;
}

table DI {
  range:float;
  intensity:float;
}

// Types of "pixels" for a camera sensor
namespace SynFlatBuffers.Component.Sensor.IMU;

table IMUData {
  Accel:Vector;
  Roll:double;
  Pitch:double;
  Yaw:double;
}

// Types of "pixels" for a camera sensor
namespace SynFlatBuffers.Component.Sensor.GPS;

table GPSData {
  latitude:double;
  longitude:double;
  altitude:double;
  time:double;
}

// Derived "class" of Component
// Creates a sensor component message
namespace SynFlatBuffers.Component.Sensor;

union Type { Camera.RGBA, Lidar.XYZI, Lidar.DI, IMU.IMUData, GPS.GPSData }

table State {
  Width:int;
  Height:int;
  buffer:[Type];
}

root_type State;

// Derived "class" of Component
// Creates a sensor component message
namespace SynFlatBuffers.Component.Sensor;

union Type { Camera.RGBA, Lidar.XYZI, Lidar.DI, IMU.IMUData, GPS.GPSData }

table State {
  Width:int;
  Height:int;
  buffer:[Type];
}

root_type State;


// Base "class"
// Creates an component message
namespace SynFlatBuffers.Component;

union Type { Sensor.State }

table State {
  message:Type;
}

root_type State;
