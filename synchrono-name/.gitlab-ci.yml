#####################################
## Synchrono CI Config ##
#####################################

# Build Stages (shared by each platform)
stages:
  - build
#  - test
#  - deploy

variables:
  CHRONO_UNIX_SHARED: "-DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=FALSE
    -DBUILD_BENCHMARKING=FALSE -DBUILD_DEMOS=FALSE -DENABLE_MODULE_IRRLICHT=TRUE
    -DENABLE_MODULE_VEHICLE=TRUE"

#---------------------#
# Arch Linux Builders #
#---------------------#
.archlinux:
  tags:
  - linux
  image:
    name: archlinux/base
    entrypoint: ["/usr/bin/bash", "-c"]
  before_script:
  - uname -a
  - pacman -Syyu --noconfirm base-devel git eigen cmake glfw glm glew glut irrlicht openmpi
  - ldconfig
  - git submodule init
  - git config submodule.chrono/chrono-dev.url https://${SUBMODULE_USER}:${SUBMODULE_PASS}@github.com/uwsbel/chrono-dev.git
  - git submodule update
  - mkdir -p build
  - mkdir -p chrono/chrono-dev/build

linux:arch-gcc:build:
  stage: build
  extends: .archlinux
  script:
  #build flatbuffers as a dependency for synchrono
  - cd flatbuffers
  - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release
  - make -j 8
  #build chrono as a dependency for synchrono
  - cd ../chrono/chrono-dev/build
  - cmake ../ $CHRONO_UNIX_SHARED
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_C_COMPILER=/usr/bin/gcc
    -DCMAKE_CXX_COMPILER=/usr/bin/g++
  - make -j 8
  #now build synchrono linking to the just built chrono
  - cd ../../../build
  - cmake ../
    -DCMAKE_BUILD_TYPE=Release
    -DCHRONO_DIR=../chrono/chrono-dev/build/cmake/
    -DCMAKE_C_COMPILER=/usr/bin/gcc
    -DCMAKE_CXX_COMPILER=/usr/bin/g++
  - make -j 8
  artifacts:
    expire_in: 120m
    paths:
    - build/

#---------------------#
# Ubuntu Builders     #
#---------------------#
.ubuntu:
  tags:
    - linux
  image:
    name: nvidia/cuda:10.1-base-ubuntu18.04
  before_script:
    - uname -a
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update; apt-get -y install git
        cmake build-essential libeigen3-dev
        libglfw3-dev libglm-dev libglew-dev freeglut3-dev libirrlicht-dev
        libopenmpi-dev
    - ldconfig
    - git submodule init
    - git config submodule.chrono/chrono-dev.url https://${SUBMODULE_USER}:${SUBMODULE_PASS}@github.com/uwsbel/chrono-dev.git
    - git submodule update
    - mkdir -p build
    - mkdir -p chrono/chrono-dev/build

linux:ubuntu1804:build:
  stage: build
  extends: .ubuntu
  script:
    #build flatbuffers as a dependency for synchrono
    - cd flatbuffers
    - cmake -G "Unix Makefiles" 
      -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_C_COMPILER=/usr/bin/gcc 
      -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_MAKE_PROGRAM=/usr/bin/make
    - make -j 8
    #build chrono as a dependency for synchrono
    - cd ../chrono/chrono-dev/build
    - cmake ../ $CHRONO_UNIX_SHARED
      -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_C_COMPILER=/usr/bin/gcc
      -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_MAKE_PROGRAM=/usr/bin/make
    - make -j 8 --debug=v
    #now build synchrono linking to the just built chrono
    - cd ../../../build
    - cmake ../
      -DCMAKE_BUILD_TYPE=Release
      -DCHRONO_DIR=../chrono/chrono-dev/build/cmake/
      -DCMAKE_C_COMPILER=/usr/bin/gcc
      -DCMAKE_CXX_COMPILER=/usr/bin/g++
      -DCMAKE_MAKE_PROGRAM=/usr/bin/make
    - make -j 8
  artifacts:
    expire_in: 120m
    paths:
      - build/

#---------------------#
# Windows Builders    #
#---------------------#
.windows:
  tags:
  - windows
  before_script:
  - $CHRONO_W64_SHARED = @(
    "-DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=FALSE",
    "-DBUILD_BENCHMARKING=FALSE -DBUILD_DEMOS=FALSE",
    "-DENABLE_MODULE_IRRLICHT=TRUE -DENABLE_MODULE_VEHICLE=TRUE"
    )
  - $CHRONO_W64_LIBRARIES = @(
    "-DGLM_INCLUDE_DIR=C:/Users/builder/Documents/glm-0.9.9.6",
    "-DGLEW_DLL=C:/Users/builder/Documents/glew-2.1.0/bin/Release/x64/glew32.dll",
    "-DGLEW_INCLUDE_DIR=C:/Users/builder/Documents/glew-2.1.0/include",
    "-DGLEW_LIBRARY=C:/Users/builder/Documents/glew-2.1.0/lib/Release/x64/glew32.lib",
    "-DGLFW_DLL=C:/Users/builder/Documents/glfw-3.3/lib-vc2015/glfw3.dll",
    "-DGLFW_INCLUDE_DIR=C:/Users/builder/Documents/glfw-3.3/include/GLFW",
    "-DGLFW_LIBRARY=C:/Users/builder/Documents/glfw-3.3/lib-vc2015/glfw3dll.lib",
    "-DIRRLICHT_LIBRARY=C:/Users/builder/Documents/irrlicht-1.8.4/lib/Win64-visualStudio/Irrlicht.lib",
    "-DIRRLICHT_ROOT=C:/Users/builder/Documents/irrlicht-1.8.4",
    "-DEIGEN3_INCLUDE_DIR=C:/Users/builder/Documents/eigen-3.3.7"
    )
  # These values pulled straight from Jay's system, may need editing to be VM specific
  - $SYNCHRONO_W64_MPI = @(
    "-DMPI_CXX_ADDITIONAL_INCLUDE_DIRS=C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019.5.281/windows/mpi/intel64/include",
    "-DMPI_C_ADDITIONAL_INCLUDE_DIRS=C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019.5.281/windows/mpi/intel64/include",
    "-DMPI_CXX_COMPILER=C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019.5.281/windows/mpi/intel64/bin/mpicl.bat",
    "-DMPI_C_COMPILER=C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019.5.281/windows/mpi/intel64/bin/mpicl.bat",
    "-DMPI_CXX_HEADER_DIR=C:/Program Files (x86)/IntelSWTools/mpi/2019.5.281/intel64/include/",
    "-DMPI_C_HEADER_DIR=C:/Program Files (x86)/IntelSWTools/mpi/2019.5.281/intel64/include/",
    "-DMPI_CXX_LIB_NAMES=impi",
    "-DMPI_C_LIB_NAMES=impi",
    "-DMPI_impi_LIBRARY=C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019.5.281/windows/mpi/intel64/lib/release/impi.lib",
    "-DMPI_impicxx_LIBRARY=C:/Program Files (x86)/IntelSWTools/compilers_and_libraries_2019.5.281/windows/mpi/intel64/lib/impicxx.lib"
    )
  # Init submodules (Chrono and Flatbuffers for now)
  - git submodule init
  - git config submodule.chrono/chrono-dev.url https://${SUBMODULE_USER}:${SUBMODULE_PASS}@github.com/uwsbel/chrono-dev.git
  - git submodule update

  - mkdir -Force build
  - mkdir -Force chrono/chrono-dev/build


windows:vs2019:build:
  stage: build
  extends: .windows
  script:
  #build chrono as a dependency for synchrono
  - cd chrono/chrono-dev/build
  - cmake ../ -G "Visual Studio 16 2019" -A x64 -T v142
    @CHRONO_W64_SHARED
    @CHRONO_W64_LIBRARIES
    -DUSE_PARALLEL_CUDA=OFF
  - '& "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MSBuild.exe" Chrono.sln -maxcpucount:8 -property:Configuration=Release'
  #now build synchrono linking to the just built chrono
  - cd ../../../build
  - set MSMPI
  - cmake ../ -G "Visual Studio 16 2019" -A x64 -T v142
    -DUSE_PARALLEL_CUDA=OFF
  - '& "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MSBuild.exe" Synchrono.sln -maxcpucount:8 -property:Configuration=Release'
  artifacts:
    expire_in: 120m
    paths:
      - build/
